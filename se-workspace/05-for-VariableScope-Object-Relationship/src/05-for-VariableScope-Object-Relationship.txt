**5일차 수업목차**
 - 반복문 for , while , do while 
 - Variable Scope 변수 범위 : instance variable , local variable
 - Java Memory
 - Object 객체 초기화 단계
 - Object ( or Class) Relationship : use a , has a , consist of  relationship
 ------------------------------------------------------------------------------
 
- Variable Scope 변수 범위 : instance variable , local variable
  	Java Variable 변수 종류
  	1) Instance variable: class 차원에서 선언, 초기화
  						  객체의 속성정보를 저장
  						  선언만 해도 기본 초기화 됨(int age; -> 0, String name; -> null, boolean flag; -> false)
  						  java memory heap영역에 저장
  						  
  	2) local variable: 메소드 또는 생성자에서 선언되고 초기화된다.
  					   지역변수라고 불리고 메소드 또는 생성자에서 임시로 사용되는 변수
  					   instance variable과 다르게 명시적인 초기화가 필요 (즉 선언만 해서는 안됨)
  					   local variable은 자신이 선언되고 초기화된 영역에서만 사용가능
  					   java memory stack 영역에 저장
  					   
  	3) static variable(or class variable): 이후 공부 예정
  	
- Java 주요 Memory 영역
	Stack 영역: local variable이 저장되는 영역, LIFO(Last In, First Out)
	Heap 영역: instance variable이 저장되는 영역, 객체의 정보가 적재된 후 주소값을 만들어 반환
	Class Area(or Meta Space): 이후 공부 예정, static variable이 저장되는 영역

- Object 객체 초기화 단계
	1) 인스턴스 변수의 기본 초기화(ex - 정수형 0, 실수형 0.0, 논리형 false, 참조형 null)
	2) 인스턴스 변수의 명시적 초기화(ex - private int day = 1;)
	3) 생성자에 의한 초기화
	4) 참조변수에 객체의 주소값 할당

 - Object ( or Class) Relationship : use a , has a , consist of  relationship
	: association, aggregation, composition
	association(연관) -> use a 관계	예) 사람이 렌트카를 이용하다
	aggregation(집합 or 집단화) -> has a 관계	예) 사람이 스마트폰을 가지고있다.
	composition(구성) -> consist of	예) 자동차가 엔진을 가지고 있다, 사람이 뇌를 가지고 있다.
	
	UML(Unified Modeling Language: 통합 모델링언어) 중 Class Diagram으로 위의 관계를 표현해본다.

**6일차 수업목차**
 - Object ( or Class) Relationship : use a , has a , consist of  relationship
 - Array(배열)
 	1. primitive data type을 저장하는 배열
 	2. reference data type을 저장하는 배열
 - Overriding
 - Inheritance
 	is a relationship
 	extends
 	overriding
 	super